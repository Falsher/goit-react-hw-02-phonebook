{"version":3,"sources":["components/phonebook/container.js","components/phonebook/phonebook.js","components/phonebook/contacts.js","components/phonebook/filter.js","App.js","reportWebVitals.js","index.js"],"names":["Container","children","className","Phonebook","state","textName","number","nameInputId","shortid","generate","hadleInputChange","e","setState","currentTarget","value","hadleInputNumber","handleSubmit","preventDefault","props","onSubmit","reset","this","type","name","pattern","title","required","onChange","Component","Contacts","ContactsData","onDeleteContact","map","id","onClick","Filter","App","contacts","filter","formSubmit","nameContact","completed","prevState","changeFilter","deleteContacts","contactId","contact","filterContact","toLowerCase","includes","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c9da943b.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Container = ({ children }) => <div className=\"Container\">{children}</div>;\r\n\r\nexport default Container;\r\n","import React, { Component } from 'react';\r\nimport shortid from 'shortid';\r\nclass Phonebook extends Component {\r\n  state = {\r\n    textName: '',\r\n    number: '',\r\n  };\r\n  nameInputId = shortid.generate();\r\n  hadleInputChange = e => {\r\n    this.setState({ textName: e.currentTarget.value });\r\n  };\r\n  hadleInputNumber = e => {\r\n    this.setState({ number: e.currentTarget.value });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.onSubmit(this.state.textName, this.state.number);\r\n    this.reset();\r\n  };\r\n  reset = () => {\r\n    this.setState({ textName: '' });\r\n    this.setState({ number: '' });\r\n  };\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.handleSubmit}>\r\n        <label>\r\n          Name\r\n          <input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n            value={this.state.textName}\r\n            onChange={this.hadleInputChange}\r\n          />\r\n        </label>\r\n        <label>\r\n          Number phone\r\n          <input\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            required\r\n            value={this.state.number}\r\n            onChange={this.hadleInputNumber}\r\n          />\r\n        </label>\r\n\r\n        <button type=\"submit\">Add contact</button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\nexport default Phonebook;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Contacts = ({ ContactsData, onDeleteContact }) => {\r\n  return (\r\n    <ul className=\"contacts\">\r\n      {ContactsData.map(({ name, number, id }) => (\r\n        <li className=\"contacts-items\" id={id}>\r\n          <span className=\"contacts-name\">{name}</span>\r\n          <span className=\"contacts-number\">{number}</span>\r\n          <button onClick={() => onDeleteContact(id)}>Delete</button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\nContacts.propTypes = {\r\n  name: PropTypes.string,\r\n  number: PropTypes.number,\r\n};\r\nexport default Contacts;\r\n","import React from 'react';\r\nconst Filter = ({ value, onChange }) => (\r\n  <label>\r\n    Find contacts by name\r\n    <input type=\"text\" value={value} onChange={onChange} />\r\n  </label>\r\n);\r\n\r\nexport default Filter;\r\n","import React, { Component } from 'react';\nimport shortid from 'shortid';\nimport Container from './components/phonebook/container';\nimport Phonebook from './components/phonebook/phonebook';\nimport Contacts from './components/phonebook/contacts';\nimport Filter from './components/phonebook/filter';\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n  };\n  formSubmit = (name, number) => {\n    const nameContact = {\n      id: shortid.generate(),\n      name,\n      number,\n      completed: false,\n    };\n    this.setState(prevState => ({\n      contacts: [nameContact, ...prevState.contacts],\n    }));\n  };\n  changeFilter = e => {\n    this.setState({ filter: e.currentTarget.value });\n  };\n  deleteContacts = contactId => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== contactId),\n    }));\n  };\n  render() {\n    const filterContact = this.state.contacts.filter(contact =>\n      contact.name.toLowerCase().includes(this.state.filter.toLowerCase()),\n    );\n    return (\n      <Container>\n        <Phonebook onSubmit={this.formSubmit} />\n        <div className=\"contactsDiv\">\n          <Contacts\n            ContactsData={filterContact}\n            onDeleteContact={this.deleteContacts}\n          />\n        </div>\n        <Filter value={this.state.filter} onChange={this.changeFilter} />\n      </Container>\n    );\n  }\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}